{"version":3,"sources":["components/Calculator/Buttons.module.css","components/Calculator/Display.module.css","components/Calculator/Calculator.tsx","logic.ts","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Calculator","useState","number","setNumber","memory","setMemory","numClick","e","preventDefault","val","target","value","exp","replace","operatorClick","calc","currentOp","ops","a","b","newCalc","i","length","j","push","calculate","s","ch","calculation","current","charAt","indexOf","parseFloat","parseCalculationString","toString","className","d","display","wrapper","grey","onClick","orange","dark","lastRow","null","coma","equal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.109c7b9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Buttons_wrapper__1c0xI\",\"orange\":\"Buttons_orange__1KX70\",\"grey\":\"Buttons_grey__XxDEf\",\"dark\":\"Buttons_dark__3RaJB\",\"lastRow\":\"Buttons_lastRow__3agOm\",\"null\":\"Buttons_null__3onuf\",\"coma\":\"Buttons_coma__12XU0\",\"equal\":\"Buttons_equal__JCvPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"Display_display__3p4Sv\"};","import React, { useState } from 'react'\r\nimport s from './Buttons.module.css'\r\nimport d from './Display.module.css'\r\nimport { calculate, parseCalculationString } from '../../logic'\r\n\r\nconst Calculator = ( ) => {\r\n    \r\n    const [number, setNumber] = useState('0')\r\n    const [memory, setMemory] = useState('')\r\n\r\n    const numClick = (e: React.SyntheticEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        let val = (e.target as HTMLButtonElement).value\r\n        setNumber((number) => { \r\n            let exp =  number + val\r\n            if ( exp[0] === '0' && exp[1] !== '.' ) {\r\n                return exp.replace('0', '')\r\n            }\r\n            return exp})\r\n    }\r\n\r\n    const operatorClick = (e: React.SyntheticEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        let val =(e.target as HTMLButtonElement).value\r\n        if(val === '=') {\r\n            //console.log(typeof(calculate(parseCalculationString(number)))) \r\n            setNumber((calculate(parseCalculationString(number))).toString())\r\n           \r\n        } else {\r\n        setNumber((number) => { \r\n           \r\n            return number + val})\r\n        }     \r\n    }\r\n\r\n    const plusMinusClick = () => {\r\n        setNumber((number) => { \r\n           if (number[0] !== '-') {\r\n                return '-' + number\r\n           } else if ( number[0] === '-') {\r\n                return number.replace('-', '')\r\n           }\r\n            return  number})\r\n    }\r\n\r\n    const clearClick = () => {\r\n        setNumber('0')\r\n    }\r\n\r\n    const memoClearClick = () => {\r\n        setMemory('')\r\n    }\r\n\r\n    const memoReadClick = () => {   \r\n        setNumber(() => (number + memory).replace(/^0/, ''))\r\n    }\r\n\r\n    const memoMinusClick = () => {\r\n        // @ts-ignore\r\n        setMemory(() => (+memory - +number).toString())\r\n    }\r\n\r\n    const memoPlusClick = () => {\r\n        setMemory(() => (+memory + +number).toString())\r\n    }\r\n\r\n\r\n    return(\r\n    <div>\r\n        <div className={d.display}>\r\n            <output> {number}</output>\r\n        </div>\r\n\r\n        <div className={s.wrapper}>\r\n            <button className={s.grey} onClick={ clearClick} >AC</button>\r\n            <button className={s.grey} onClick={ plusMinusClick}>+/-</button>\r\n            <button className={s.grey} value='%' onClick={ operatorClick}>%</button>\r\n            <button className={s.orange} value='/' onClick={ operatorClick}>&divide;</button>\r\n            <button className={s.dark} onClick={ memoClearClick}>mc</button>\r\n            <button className={s.dark} onClick={ memoReadClick}>mr</button>\r\n            <button className={s.dark} onClick={ memoMinusClick}>m-</button>\r\n            <button className={s.orange} onClick={ memoPlusClick}>m+</button>\r\n            <button className={s.dark} value='7' onClick={ numClick}>7</button>\r\n            <button className={s.dark} value='8' onClick={ numClick}>8</button>\r\n            <button className={s.dark} value='9' onClick={ numClick}>9</button>\r\n            <button className={s.orange} value='*' onClick={ operatorClick}>x</button>\r\n            <button className={s.dark} value='4' onClick={ numClick}>4</button>\r\n            <button className={s.dark} value='5' onClick={ numClick}>5</button>\r\n            <button className={s.dark} value='6' onClick={ numClick}>6</button>\r\n            <button className={s.orange} value='-' onClick={ operatorClick}>-</button>\r\n            <button className={s.dark} value='1' onClick={ numClick}>1</button>\r\n            <button className={s.dark} value='2' onClick={ numClick}>2</button>\r\n            <button className={s.dark} value='3' onClick={ numClick}>3</button>\r\n            <button className={s.orange} value='+' onClick={ operatorClick}>+</button>       \r\n        </div>\r\n        <div className={s.lastRow}>\r\n            <button className={s.null} value='0' onClick={ numClick}>0</button>\r\n            <button className={s.coma} value='.' onClick={ numClick}>,</button>\r\n            <button className={s.equal } value='=' onClick={ operatorClick}>=</button>\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Calculator","\r\nexport const parseCalculationString = (s: string): Array<number | string> => {\r\n    \r\n    // Parse a calculation string into an array of numbers and operators\r\n    var calculation = [],\r\n        current = '';\r\n    for (var i = 0, ch; ch = s.charAt(i); i++) {\r\n        if ('%*/+-'.indexOf(ch) > -1) {\r\n            if (current === '' && ch === '-') {\r\n                current = '-';\r\n            } else {\r\n                calculation.push(parseFloat(current), ch);\r\n                current = '';\r\n            }\r\n        } else {\r\n            current += s.charAt(i);\r\n        }\r\n    }\r\n    if (current !== '') {\r\n        calculation.push(parseFloat(current));\r\n    }\r\n    return calculation;\r\n}\r\n\r\n\r\nexport const calculate = (calc: Array<any>):number | Array<number> =>  {\r\n\r\n\r\n\r\n    // Perform a calculation expressed as an array of operators and numbers\r\n    var ops: any = [{'%': (a=1, b=1) => a *b/100},\r\n               {'*': (a: number, b: number) => a * b, '/': (a: number, b: number) => a / b},\r\n               {'+': (a: number, b: number) => a + b, '-': (a: number, b: number) => a - b}],\r\n        newCalc: Array<number> = [],\r\n        currentOp;\r\n    for (var i = 0; i < ops.length; i++) {\r\n        for (var j = 0; j < calc.length; j++) {\r\n            if (ops[i][calc[j]]) {\r\n                currentOp = ops[i][calc[j]];\r\n            } else if (currentOp) {\r\n                newCalc[newCalc.length - 1] = \r\n                    currentOp(newCalc[newCalc.length - 1], calc[j]);\r\n                currentOp = null;\r\n            } else {\r\n                newCalc.push(calc[j]);\r\n            }\r\n            //console.log(newCalc);\r\n        }\r\n        calc = newCalc;\r\n        newCalc = [];\r\n    }\r\n    if (calc.length > 1) {\r\n        //console.log('Error: unable to resolve calculation');\r\n        return calc;\r\n    } else {\r\n        return calc[0];\r\n    }\r\n}","import React from 'react'\nimport './App.css'\nimport Calculator from './components/Calculator/Calculator'\n\n\nconst App = () => {\n  \n  return (\n    <div className='wrapper'>\n      <Calculator />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}