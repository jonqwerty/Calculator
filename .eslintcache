[{"D:\\it-kamasutra\\calc\\src\\index.js":"1","D:\\it-kamasutra\\calc\\src\\App.js":"2","D:\\it-kamasutra\\calc\\src\\reportWebVitals.js":"3","D:\\it-kamasutra\\calc\\src\\logic.js":"4","D:\\it-kamasutra\\calc\\src\\components\\Calculator\\Calculator.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":229,"mtime":1610200449384,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1688,"mtime":1610198752049,"results":"10","hashOfConfig":"7"},{"size":3328,"mtime":1610200759758,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1yphc2b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-kamasutra\\calc\\src\\index.js",[],["24","25"],"D:\\it-kamasutra\\calc\\src\\App.js",[],"D:\\it-kamasutra\\calc\\src\\reportWebVitals.js",[],"D:\\it-kamasutra\\calc\\src\\logic.js",["26","27","28","29"],"export function parseCalculationString(s) {\r\n    // --- Parse a calculation string into an array of numbers and operators\r\n    var calculation = [],\r\n        current = '';\r\n    for (var i = 0, ch; ch = s.charAt(i); i++) {\r\n        if ('%*/+-'.indexOf(ch) > -1) {\r\n            if (current == '' && ch == '-') {\r\n                current = '-';\r\n            } else {\r\n                calculation.push(parseFloat(current), ch);\r\n                current = '';\r\n            }\r\n        } else {\r\n            current += s.charAt(i);\r\n        }\r\n    }\r\n    if (current != '') {\r\n        calculation.push(parseFloat(current));\r\n    }\r\n    return calculation;\r\n}\r\n\r\nexport function calculate(calc) {\r\n    // --- Perform a calculation expressed as an array of operators and numbers\r\n    var ops = [{'%': (a=1, b=1) => a *b/100},\r\n               {'*': (a, b) => a * b, '/': (a, b) => a / b},\r\n               {'+': (a, b) => a + b, '-': (a, b) => a - b}],\r\n        newCalc = [],\r\n        currentOp;\r\n    for (var i = 0; i < ops.length; i++) {\r\n        for (var j = 0; j < calc.length; j++) {\r\n            if (ops[i][calc[j]]) {\r\n                currentOp = ops[i][calc[j]];\r\n            } else if (currentOp) {\r\n                newCalc[newCalc.length - 1] = \r\n                    currentOp(newCalc[newCalc.length - 1], calc[j]);\r\n                currentOp = null;\r\n            } else {\r\n                newCalc.push(calc[j]);\r\n            }\r\n            console.log(newCalc);\r\n        }\r\n        calc = newCalc;\r\n        newCalc = [];\r\n    }\r\n    if (calc.length > 1) {\r\n        console.log('Error: unable to resolve calculation');\r\n        return calc;\r\n    } else {\r\n        return calc[0];\r\n    }\r\n}","D:\\it-kamasutra\\calc\\src\\components\\Calculator\\Calculator.js",["30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":25,"nodeType":"37","messageId":"38","endLine":5,"endColumn":41},{"ruleId":"39","severity":1,"message":"40","line":7,"column":25,"nodeType":"41","messageId":"42","endLine":7,"endColumn":27},{"ruleId":"39","severity":1,"message":"40","line":7,"column":37,"nodeType":"41","messageId":"42","endLine":7,"endColumn":39},{"ruleId":"39","severity":1,"message":"43","line":17,"column":17,"nodeType":"41","messageId":"42","endLine":17,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":9,"column":12,"nodeType":"46","messageId":"47","endLine":9,"endColumn":18},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'memory' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]